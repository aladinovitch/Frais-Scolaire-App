// <auto-generated />
using System;
using Frais_Scolaire.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Frais_Scolaire.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("FraisScolaire")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Frais_Scolaire.Models.Absence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EleveId")
                        .HasColumnType("int");

                    b.Property<string>("Justification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeanceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EleveId");

                    b.HasIndex("SeanceId");

                    b.ToTable("Absences", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EleveId = 5,
                            Justification = "Maladie",
                            SeanceId = 1
                        },
                        new
                        {
                            Id = 2,
                            EleveId = 2,
                            Justification = "Non justifiée",
                            SeanceId = 2
                        },
                        new
                        {
                            Id = 3,
                            EleveId = 5,
                            Justification = "Récupération",
                            SeanceId = 2
                        },
                        new
                        {
                            Id = 4,
                            EleveId = 3,
                            Justification = "Non justifiée",
                            SeanceId = 2
                        },
                        new
                        {
                            Id = 5,
                            EleveId = 1,
                            Justification = "Non justifiée",
                            SeanceId = 3
                        });
                });

            modelBuilder.Entity("Frais_Scolaire.Models.AnneeEtude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnneeEtudes", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "Première année"
                        },
                        new
                        {
                            Id = 2,
                            Nom = "Deuxième année"
                        },
                        new
                        {
                            Id = 3,
                            Nom = "Troisième année"
                        });
                });

            modelBuilder.Entity("Frais_Scolaire.Models.AnneeScolaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnneeScolaires", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "2019/2020"
                        },
                        new
                        {
                            Id = 2,
                            Nom = "2020/2021"
                        },
                        new
                        {
                            Id = 3,
                            Nom = "2021/2022"
                        });
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Eleve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupeId")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Naissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupeId");

                    b.ToTable("Eleves", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresse = "Quartier takbou, Médéa",
                            Email = "ahmed.mido@gmail.com",
                            GroupeId = 3,
                            Matricule = "26/15/001",
                            Naissance = new DateTime(2015, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Bouhmed",
                            Phone = "05 01 01 01",
                            Prenom = "Ahmed",
                            Sexe = "Garçon"
                        },
                        new
                        {
                            Id = 2,
                            Adresse = "Quartier des fleurs, Bejaia",
                            Email = "arezki.rzk@gmail.com",
                            GroupeId = 3,
                            Matricule = "06/15/002",
                            Naissance = new DateTime(2015, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Benrezki",
                            Phone = "05 02 02 02",
                            Prenom = "Arezki",
                            Sexe = "Garçon"
                        },
                        new
                        {
                            Id = 3,
                            Adresse = "Quartier Bab el Kouas, Médéa",
                            Email = "amerrr@gmail.com",
                            GroupeId = 3,
                            Matricule = "26/15/003",
                            Naissance = new DateTime(2015, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Bouamer",
                            Phone = "05 03 03 03",
                            Prenom = "Amer",
                            Sexe = "Garçon"
                        },
                        new
                        {
                            Id = 4,
                            Adresse = "Cité des roches, Réghaia",
                            Email = "so.sidou33@bmail.com",
                            GroupeId = 4,
                            Matricule = "16/14/004",
                            Naissance = new DateTime(2014, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Sidou",
                            Phone = "05 04 04 04",
                            Prenom = "Sofiane",
                            Sexe = "Garçon"
                        },
                        new
                        {
                            Id = 5,
                            Adresse = "Quartier bouloughine, Alger",
                            Email = "samimi@gmail.com",
                            GroupeId = 4,
                            Matricule = "16/16/005",
                            Naissance = new DateTime(2016, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Smihi",
                            Phone = "05 05 05 05",
                            Prenom = "Samiha",
                            Sexe = "Fille"
                        },
                        new
                        {
                            Id = 6,
                            Adresse = "Cité des cinq, Belcourt",
                            Email = "fati.bb@gmail.com",
                            GroupeId = 4,
                            Matricule = "16/15/006",
                            Naissance = new DateTime(2015, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Boufetoum",
                            Phone = "05 06 06 06",
                            Prenom = "Fatima",
                            Sexe = "Fille"
                        },
                        new
                        {
                            Id = 7,
                            Adresse = "Route des accacias, Médéa",
                            Email = "bousemar.sam@gmail.com",
                            GroupeId = 4,
                            Matricule = "26/16/007",
                            Naissance = new DateTime(2016, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Bousemar",
                            Phone = "05 07 07 07",
                            Prenom = "Samira",
                            Sexe = "Fille"
                        });
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Enseignant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salaire")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Enseignants", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adresse = "Quartier Thniet el Hdjer, Médéa",
                            Email = "sli.mane@gmail.com",
                            Matricule = "E/001",
                            Nom = "Benslimane",
                            Phone = "05 10 10 10",
                            Prenom = "Slimane",
                            Salaire = 15000,
                            Statut = "Vacataire"
                        },
                        new
                        {
                            Id = 2,
                            Adresse = "Quartier Ain Dhheb, Médéa",
                            Email = "aliben@gmail.com",
                            Matricule = "E/002",
                            Nom = "Benali",
                            Phone = "05 20 20 20",
                            Prenom = "Ali",
                            Salaire = 50000,
                            Statut = "Ingénieur"
                        },
                        new
                        {
                            Id = 3,
                            Adresse = "Quartier M'salah, Médéa",
                            Email = "ss.bousahla@gmail.com",
                            Matricule = "E/003",
                            Nom = "Bousahla",
                            Phone = "05 30 30 30",
                            Prenom = "Souhila",
                            Salaire = 80000,
                            Statut = "Docteur"
                        },
                        new
                        {
                            Id = 4,
                            Adresse = "Quartier Merdj Echkir, Médéa",
                            Email = "amina.ben@gmail.com",
                            Matricule = "E/004",
                            Nom = "Amina",
                            Phone = "05 40 40 40",
                            Prenom = "Amina",
                            Salaire = 90000,
                            Statut = "Docteur"
                        });
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Enseignement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GroupeId")
                        .HasColumnType("int");

                    b.Property<int>("MatiereId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupeId");

                    b.HasIndex("MatiereId");

                    b.ToTable("Enseignements", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupeId = 1,
                            MatiereId = 1
                        },
                        new
                        {
                            Id = 2,
                            GroupeId = 2,
                            MatiereId = 1
                        },
                        new
                        {
                            Id = 3,
                            GroupeId = 3,
                            MatiereId = 1
                        },
                        new
                        {
                            Id = 4,
                            GroupeId = 1,
                            MatiereId = 2
                        },
                        new
                        {
                            Id = 5,
                            GroupeId = 2,
                            MatiereId = 2
                        },
                        new
                        {
                            Id = 6,
                            GroupeId = 3,
                            MatiereId = 2
                        });
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Groupe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnneeEtudeId")
                        .HasColumnType("int");

                    b.Property<int>("AnneeScolaireId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnneeEtudeId");

                    b.HasIndex("AnneeScolaireId");

                    b.ToTable("Groupes", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnneeEtudeId = 1,
                            AnneeScolaireId = 1,
                            Nom = "Licence 1 G1"
                        },
                        new
                        {
                            Id = 2,
                            AnneeEtudeId = 1,
                            AnneeScolaireId = 2,
                            Nom = "Licence 1 G1"
                        },
                        new
                        {
                            Id = 3,
                            AnneeEtudeId = 1,
                            AnneeScolaireId = 3,
                            Nom = "Licence 1 G1"
                        },
                        new
                        {
                            Id = 4,
                            AnneeEtudeId = 1,
                            AnneeScolaireId = 3,
                            Nom = "Licence 1 G2"
                        },
                        new
                        {
                            Id = 5,
                            AnneeEtudeId = 2,
                            AnneeScolaireId = 3,
                            Nom = "Licence 2 G1"
                        },
                        new
                        {
                            Id = 6,
                            AnneeEtudeId = 2,
                            AnneeScolaireId = 3,
                            Nom = "Licence 2 G2"
                        },
                        new
                        {
                            Id = 7,
                            AnneeEtudeId = 2,
                            AnneeScolaireId = 3,
                            Nom = "Licence 2 G2"
                        },
                        new
                        {
                            Id = 8,
                            AnneeEtudeId = 3,
                            AnneeScolaireId = 3,
                            Nom = "Licence 3 G1"
                        });
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Matiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EnseignantId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnseignantId");

                    b.ToTable("Matieres", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnseignantId = 3,
                            Nom = "Anglais : Introductory Course"
                        },
                        new
                        {
                            Id = 2,
                            EnseignantId = 3,
                            Nom = "Français : Grammaire et conjugaison"
                        },
                        new
                        {
                            Id = 3,
                            EnseignantId = 1,
                            Nom = "Math : Arithmétique"
                        },
                        new
                        {
                            Id = 4,
                            EnseignantId = 4,
                            Nom = "Math : Géométrie"
                        });
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Seance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MatiereId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatiereId");

                    b.ToTable("Seances", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2022, 1, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 1,
                            Numero = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2022, 1, 2, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 1,
                            Numero = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2022, 1, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 1,
                            Numero = 3
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2022, 1, 4, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 1,
                            Numero = 4
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2022, 1, 5, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 1,
                            Numero = 5
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2022, 1, 6, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 2,
                            Numero = 6
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2022, 1, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 2,
                            Numero = 7
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2022, 1, 8, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 2,
                            Numero = 8
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2022, 1, 9, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 2,
                            Numero = 9
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2022, 1, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 3,
                            Numero = 10
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2022, 1, 11, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 3,
                            Numero = 11
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2022, 1, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 3,
                            Numero = 12
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateTime(2022, 1, 13, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 3,
                            Numero = 13
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateTime(2022, 1, 14, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 3,
                            Numero = 14
                        },
                        new
                        {
                            Id = 15,
                            Date = new DateTime(2022, 1, 15, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            MatiereId = 3,
                            Numero = 15
                        });
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Trimestre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trimestres", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateDebut = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2021, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Premier trimestre"
                        },
                        new
                        {
                            Id = 2,
                            DateDebut = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2022, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Deuxième trimestre"
                        },
                        new
                        {
                            Id = 3,
                            DateDebut = new DateTime(2022, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2022, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Troisième trimestre"
                        },
                        new
                        {
                            Id = 4,
                            DateDebut = new DateTime(2022, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2022, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Premier trimestre"
                        },
                        new
                        {
                            Id = 5,
                            DateDebut = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2023, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Deuxième trimestre"
                        },
                        new
                        {
                            Id = 6,
                            DateDebut = new DateTime(2023, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2023, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Troisième trimestre"
                        },
                        new
                        {
                            Id = 7,
                            DateDebut = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Premier trimestre"
                        },
                        new
                        {
                            Id = 8,
                            DateDebut = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2024, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Deuxième trimestre"
                        },
                        new
                        {
                            Id = 9,
                            DateDebut = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFin = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nom = "Troisième trimestre"
                        });
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Versement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EleveId")
                        .HasColumnType("int");

                    b.Property<int>("Montant")
                        .HasColumnType("int");

                    b.Property<int>("TrimestreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EleveId");

                    b.HasIndex("TrimestreId");

                    b.ToTable("Versements", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EleveId = 1,
                            Montant = 45000,
                            TrimestreId = 1
                        },
                        new
                        {
                            Id = 2,
                            EleveId = 2,
                            Montant = 45000,
                            TrimestreId = 1
                        },
                        new
                        {
                            Id = 3,
                            EleveId = 3,
                            Montant = 45000,
                            TrimestreId = 1
                        },
                        new
                        {
                            Id = 4,
                            EleveId = 4,
                            Montant = 45000,
                            TrimestreId = 1
                        },
                        new
                        {
                            Id = 5,
                            EleveId = 5,
                            Montant = 45000,
                            TrimestreId = 1
                        },
                        new
                        {
                            Id = 6,
                            EleveId = 6,
                            Montant = 45000,
                            TrimestreId = 1
                        },
                        new
                        {
                            Id = 7,
                            EleveId = 7,
                            Montant = 45000,
                            TrimestreId = 1
                        },
                        new
                        {
                            Id = 8,
                            EleveId = 1,
                            Montant = 50000,
                            TrimestreId = 2
                        },
                        new
                        {
                            Id = 9,
                            EleveId = 2,
                            Montant = 50000,
                            TrimestreId = 2
                        },
                        new
                        {
                            Id = 10,
                            EleveId = 3,
                            Montant = 50000,
                            TrimestreId = 2
                        },
                        new
                        {
                            Id = 11,
                            EleveId = 4,
                            Montant = 50000,
                            TrimestreId = 2
                        },
                        new
                        {
                            Id = 12,
                            EleveId = 5,
                            Montant = 50000,
                            TrimestreId = 2
                        },
                        new
                        {
                            Id = 13,
                            EleveId = 6,
                            Montant = 50000,
                            TrimestreId = 2
                        },
                        new
                        {
                            Id = 14,
                            EleveId = 7,
                            Montant = 50000,
                            TrimestreId = 2
                        },
                        new
                        {
                            Id = 15,
                            EleveId = 1,
                            Montant = 55000,
                            TrimestreId = 3
                        },
                        new
                        {
                            Id = 16,
                            EleveId = 2,
                            Montant = 55000,
                            TrimestreId = 3
                        },
                        new
                        {
                            Id = 17,
                            EleveId = 3,
                            Montant = 55000,
                            TrimestreId = 3
                        },
                        new
                        {
                            Id = 18,
                            EleveId = 4,
                            Montant = 55000,
                            TrimestreId = 3
                        },
                        new
                        {
                            Id = 19,
                            EleveId = 5,
                            Montant = 55000,
                            TrimestreId = 3
                        },
                        new
                        {
                            Id = 20,
                            EleveId = 6,
                            Montant = 55000,
                            TrimestreId = 3
                        },
                        new
                        {
                            Id = 21,
                            EleveId = 7,
                            Montant = 55000,
                            TrimestreId = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", "FraisScolaire");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "FraisScolaire");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = "f96a693f-e80b-4790-b327-4eb868568f35",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "794e30cd-4de6-44be-a220-3a6105655af3",
                            Email = "manager@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MANAGER@EMAIL.COM",
                            NormalizedUserName = "MANAGER@EMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBzzW3Q4Y+HEuwgIhFr5S+kyFpvL9epi1SXoQ6OhcrfCEAzqCnhJZ8Dcxk9xRoQqlQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e122d81b-7b06-4b7a-b6aa-e3f610983493",
                            TwoFactorEnabled = false,
                            UserName = "manager@email.com"
                        },
                        new
                        {
                            Id = "373d045d-2e52-445c-9fb8-29a7202801a3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2744abeb-6ba7-49f2-aff9-412f8228ec54",
                            Email = "basic@email.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "BASIC@EMAIL.COM",
                            NormalizedUserName = "BASIC@EMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEA11HjxU9q0rjYuTBwZfWt8OBLrNMgNpwPiRCySR96lz2mwWX+j1WjHzOvmY+eUiaw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c10f8a18-9a32-4ad3-b5d8-87bed91b0814",
                            TwoFactorEnabled = false,
                            UserName = "basic@email.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "FraisScolaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Manager",
                            ClaimValue = "true",
                            UserId = "f96a693f-e80b-4790-b327-4eb868568f35"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "Basic user",
                            ClaimValue = "true",
                            UserId = "373d045d-2e52-445c-9fb8-29a7202801a3"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "FraisScolaire");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "FraisScolaire");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "FraisScolaire");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Absence", b =>
                {
                    b.HasOne("Frais_Scolaire.Models.Eleve", "Eleve")
                        .WithMany("EleveAbsences")
                        .HasForeignKey("EleveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Frais_Scolaire.Models.Seance", "Seance")
                        .WithMany("SeanceAbsences")
                        .HasForeignKey("SeanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eleve");

                    b.Navigation("Seance");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Eleve", b =>
                {
                    b.HasOne("Frais_Scolaire.Models.Groupe", "Groupe")
                        .WithMany("GroupeEleves")
                        .HasForeignKey("GroupeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groupe");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Enseignement", b =>
                {
                    b.HasOne("Frais_Scolaire.Models.Groupe", "Groupe")
                        .WithMany("GroupeEnseignements")
                        .HasForeignKey("GroupeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Frais_Scolaire.Models.Matiere", "Matiere")
                        .WithMany("MatiereEnseignements")
                        .HasForeignKey("MatiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groupe");

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Groupe", b =>
                {
                    b.HasOne("Frais_Scolaire.Models.AnneeEtude", "AnneeEtude")
                        .WithMany("AnneeEtudeGroupes")
                        .HasForeignKey("AnneeEtudeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Frais_Scolaire.Models.AnneeScolaire", "AnneeScolaire")
                        .WithMany("AnneeScolaireGroupes")
                        .HasForeignKey("AnneeScolaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnneeEtude");

                    b.Navigation("AnneeScolaire");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Matiere", b =>
                {
                    b.HasOne("Frais_Scolaire.Models.Enseignant", "Enseignant")
                        .WithMany("EnseignantMatieres")
                        .HasForeignKey("EnseignantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enseignant");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Seance", b =>
                {
                    b.HasOne("Frais_Scolaire.Models.Matiere", "Matiere")
                        .WithMany("MatiereSeances")
                        .HasForeignKey("MatiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Versement", b =>
                {
                    b.HasOne("Frais_Scolaire.Models.Eleve", "Eleve")
                        .WithMany("EleveVersements")
                        .HasForeignKey("EleveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Frais_Scolaire.Models.Trimestre", "Trimestre")
                        .WithMany("TrimestreVersements")
                        .HasForeignKey("TrimestreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eleve");

                    b.Navigation("Trimestre");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Frais_Scolaire.Models.AnneeEtude", b =>
                {
                    b.Navigation("AnneeEtudeGroupes");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.AnneeScolaire", b =>
                {
                    b.Navigation("AnneeScolaireGroupes");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Eleve", b =>
                {
                    b.Navigation("EleveAbsences");

                    b.Navigation("EleveVersements");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Enseignant", b =>
                {
                    b.Navigation("EnseignantMatieres");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Groupe", b =>
                {
                    b.Navigation("GroupeEleves");

                    b.Navigation("GroupeEnseignements");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Matiere", b =>
                {
                    b.Navigation("MatiereEnseignements");

                    b.Navigation("MatiereSeances");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Seance", b =>
                {
                    b.Navigation("SeanceAbsences");
                });

            modelBuilder.Entity("Frais_Scolaire.Models.Trimestre", b =>
                {
                    b.Navigation("TrimestreVersements");
                });
#pragma warning restore 612, 618
        }
    }
}
